name: server-go CI

# This workflow is triggered on pushes to the repository.
on: [push]

jobs:
  client:
    name: Build client
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: '11'
      - uses: DeLaGuardo/setup-clojure@2.0
        with:
          lein: latest
      - run: lein cljsbuild once min
      - run: lein cljsbuild test
      - uses: actions/upload-artifact@v1
        with:
          name: client
          path: resources/public/static/js/compiled/app.js

  server:
    name: Build Go Application with packr
    needs: client
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-18.04, windows-2016]

    env:
      CONAN_LOGIN_USERNAME_OSP: ${{ secrets.osp_conan_usr }}
      CONAN_PASSWORD_OSP: ${{ secrets.osp_conan_pwd }}
      CONAN_REVISIONS_ENABLED: 1
      CONAN_NON_INTERACTIVE: True

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Install prerequisites
        run: pip install conan
      - name: Configure libcxx for Linux
        run: |
          conan profile new default --detect
          conan profile update settings.compiler.libcxx=libstdc++11 default
        if: runner.os == 'Linux'
      - name: Add Conan remote
        run: conan remote add osp https://osp-conan.azurewebsites.net/artifactory/api/conan/public --force
      - name: Install Conan deps
        run: conan install -s build_type=Release .
      - name: Download client
        uses: actions/download-artifact@v1
        with:
          name: client
      - uses: actions/setup-go@v2
        with:
          go-version: '1.14'
      - name: packr build
        run: packr build -v
        env:
          CGO_LDFLAGS: '-Wl,-rpath,$ORIGIN/../lib'
      - name: Prepare Windows distribution
        run: |
          cp ./cse-server-go.exe dist/bin
          cp ./run-windows.cmd ./dist
        if: runner.os == 'Windows'
      - name: Prepare Linux distribution
        run: |
          cp ./cse-server-go dist/bin
          cp ./run-linux ./dist
          sh ./set-rpath ./dist/lib
        if: runner.os == 'Linux'
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: cse-server-go-${{ runner.os }}
          path: dist
